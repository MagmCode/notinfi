{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport { FormControl } from '@angular/forms';\nimport { fromEvent, Subject } from 'rxjs';\nimport { filter, switchMap, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"app/modules/admin/apps/contacts/contacts.service\";\nimport * as i3 from \"@fuse/services/media-watcher\";\nimport * as i4 from \"@angular/material/sidenav\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/material/button\";\nconst _c0 = [\"matDrawer\"];\n\nfunction ContactsListComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.contactsCount, \" \");\n  }\n}\n\nfunction ContactsListComponent_ng_container_25_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const contact_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", contact_r8.name.charAt(0), \" \");\n  }\n}\n\nfunction ContactsListComponent_ng_container_25_ng_container_1_ng_container_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"img\", 27);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const contact_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", contact_r8.avatar, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ContactsListComponent_ng_container_25_ng_container_1_ng_container_1_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 28);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const contact_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", contact_r8.name.charAt(0), \" \");\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"hover:bg-gray-100 dark:hover:bg-hover\": a0,\n    \"bg-primary-50 dark:bg-hover\": a1\n  };\n};\n\nconst _c2 = function (a1) {\n  return [\"./\", a1];\n};\n\nfunction ContactsListComponent_ng_container_25_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ContactsListComponent_ng_container_25_ng_container_1_ng_container_1_ng_container_1_Template, 3, 1, \"ng-container\", 9);\n    i0.ɵɵelementStart(2, \"a\", 21);\n    i0.ɵɵelementStart(3, \"div\", 22);\n    i0.ɵɵtemplate(4, ContactsListComponent_ng_container_25_ng_container_1_ng_container_1_ng_container_4_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵtemplate(5, ContactsListComponent_ng_container_25_ng_container_1_ng_container_1_ng_container_5_Template, 3, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 23);\n    i0.ɵɵelementStart(7, \"div\", 24);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 25);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const contact_r8 = ctx.$implicit;\n    const i_r9 = ctx.index;\n    const contacts_r5 = i0.ɵɵnextContext(2).ngIf;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r9 === 0 || contact_r8.name.charAt(0) !== contacts_r5[i_r9 - 1].name.charAt(0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c1, !ctx_r7.selectedContact || ctx_r7.selectedContact.id !== contact_r8.id, ctx_r7.selectedContact && ctx_r7.selectedContact.id === contact_r8.id))(\"routerLink\", i0.ɵɵpureFunction1(10, _c2, contact_r8.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", contact_r8.avatar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !contact_r8.avatar);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(contact_r8.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r8.title);\n  }\n}\n\nfunction ContactsListComponent_ng_container_25_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ContactsListComponent_ng_container_25_ng_container_1_ng_container_1_Template, 11, 12, \"ng-container\", 20);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const contacts_r5 = i0.ɵɵnextContext().ngIf;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", contacts_r5)(\"ngForTrackBy\", ctx_r6.trackByFn);\n  }\n}\n\nfunction ContactsListComponent_ng_container_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ContactsListComponent_ng_container_25_ng_container_1_Template, 2, 2, \"ng-container\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const contacts_r5 = ctx.ngIf;\n    i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(28);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", contacts_r5.length)(\"ngIfElse\", _r3);\n  }\n}\n\nfunction ContactsListComponent_ng_template_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1, \"There are no contacts!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = function () {\n  return {\n    \"=0\": \"No contacts\",\n    \"=1\": \"contact\",\n    \"other\": \"contacts\"\n  };\n};\n\nexport class ContactsListComponent {\n  /**\r\n   * Constructor\r\n   */\n  constructor(_activatedRoute, _changeDetectorRef, _contactsService, _document, _router, _fuseMediaWatcherService) {\n    this._activatedRoute = _activatedRoute;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._contactsService = _contactsService;\n    this._document = _document;\n    this._router = _router;\n    this._fuseMediaWatcherService = _fuseMediaWatcherService;\n    this.contactsCount = 0;\n    this.contactsTableColumns = ['name', 'email', 'phoneNumber', 'job'];\n    this.searchInputControl = new FormControl();\n    this._unsubscribeAll = new Subject();\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\r\n   * On init\r\n   */\n\n\n  ngOnInit() {\n    // Get the contacts\n    this.contacts$ = this._contactsService.contacts$;\n\n    this._contactsService.contacts$.pipe(takeUntil(this._unsubscribeAll)).subscribe(contacts => {\n      // Update the counts\n      this.contactsCount = contacts.length; // Mark for check\n\n      this._changeDetectorRef.markForCheck();\n    }); // Get the contact\n\n\n    this._contactsService.contact$.pipe(takeUntil(this._unsubscribeAll)).subscribe(contact => {\n      // Update the selected contact\n      this.selectedContact = contact; // Mark for check\n\n      this._changeDetectorRef.markForCheck();\n    }); // Get the countries\n\n\n    this._contactsService.countries$.pipe(takeUntil(this._unsubscribeAll)).subscribe(countries => {\n      // Update the countries\n      this.countries = countries; // Mark for check\n\n      this._changeDetectorRef.markForCheck();\n    }); // Subscribe to search input field value changes\n\n\n    this.searchInputControl.valueChanges.pipe(takeUntil(this._unsubscribeAll), switchMap(query => // Search\n    this._contactsService.searchContacts(query))).subscribe(); // Subscribe to MatDrawer opened change\n\n    this.matDrawer.openedChange.subscribe(opened => {\n      if (!opened) {\n        // Remove the selected contact when drawer closed\n        this.selectedContact = null; // Mark for check\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }); // Subscribe to media changes\n\n    this._fuseMediaWatcherService.onMediaChange$.pipe(takeUntil(this._unsubscribeAll)).subscribe(({\n      matchingAliases\n    }) => {\n      // Set the drawerMode if the given breakpoint is active\n      if (matchingAliases.includes('lg')) {\n        this.drawerMode = 'side';\n      } else {\n        this.drawerMode = 'over';\n      } // Mark for check\n\n\n      this._changeDetectorRef.markForCheck();\n    }); // Listen for shortcuts\n\n\n    fromEvent(this._document, 'keydown').pipe(takeUntil(this._unsubscribeAll), filter(event => (event.ctrlKey === true || event.metaKey) && event.key === '/' // '/'\n    )).subscribe(() => {\n      this.createContact();\n    });\n  }\n  /**\r\n   * On destroy\r\n   */\n\n\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n\n    this._unsubscribeAll.complete();\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\r\n   * On backdrop clicked\r\n   */\n\n\n  onBackdropClicked() {\n    // Go back to the list\n    this._router.navigate(['./'], {\n      relativeTo: this._activatedRoute\n    }); // Mark for check\n\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\r\n   * Create contact\r\n   */\n\n\n  createContact() {\n    // Create the contact\n    this._contactsService.createContact().subscribe(newContact => {\n      // Go to the new contact\n      this._router.navigate(['./', newContact.id], {\n        relativeTo: this._activatedRoute\n      }); // Mark for check\n\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /**\r\n   * Track by function for ngFor loops\r\n   *\r\n   * @param index\r\n   * @param item\r\n   */\n\n\n  trackByFn(index, item) {\n    return item.id || index;\n  }\n\n}\n\nContactsListComponent.ɵfac = function ContactsListComponent_Factory(t) {\n  return new (t || ContactsListComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.ContactsService), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.FuseMediaWatcherService));\n};\n\nContactsListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactsListComponent,\n  selectors: [[\"contacts-list\"]],\n  viewQuery: function ContactsListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matDrawer = _t.first);\n    }\n  },\n  decls: 29,\n  vars: 19,\n  consts: [[1, \"absolute\", \"inset-0\", \"flex\", \"flex-col\", \"min-w-0\", \"overflow-hidden\"], [1, \"flex-auto\", \"h-full\", \"bg-card\", \"dark:bg-transparent\", 3, \"backdropClick\"], [1, \"w-full\", \"md:w-160\", \"dark:bg-gray-900\", 3, \"mode\", \"opened\", \"position\", \"disableClose\"], [\"matDrawer\", \"\"], [1, \"flex\", \"flex-col\"], [1, \"flex-auto\"], [1, \"flex\", \"flex-col\", \"sm:flex-row\", \"md:flex-col\", \"flex-auto\", \"justify-between\", \"py-8\", \"px-6\", \"md:px-8\", \"border-b\"], [1, \"text-4xl\", \"font-extrabold\", \"tracking-tight\", \"leading-none\"], [1, \"ml-0.5\", \"font-medium\", \"text-secondary\"], [4, \"ngIf\"], [1, \"flex\", \"items-center\", \"mt-4\", \"sm:mt-0\", \"md:mt-4\"], [1, \"fuse-mat-dense\", \"fuse-mat-no-subscript\", \"fuse-mat-rounded\", \"w-full\", \"min-w-50\"], [\"matPrefix\", \"\", 1, \"icon-size-5\", 3, \"svgIcon\"], [\"matInput\", \"\", 3, \"formControl\", \"autocomplete\", \"placeholder\"], [\"mat-flat-button\", \"\", 1, \"ml-4\", 3, \"color\", \"click\"], [3, \"svgIcon\"], [1, \"ml-2\", \"mr-1\"], [1, \"relative\"], [\"noContacts\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"z-20\", \"flex\", \"items-center\", \"px-6\", \"py-4\", \"md:px-8\", \"cursor-pointer\", \"border-b\", 3, \"ngClass\", \"routerLink\"], [1, \"flex\", \"flex-0\", \"items-center\", \"justify-center\", \"w-10\", \"h-10\", \"rounded-full\", \"overflow-hidden\"], [1, \"min-w-0\", \"ml-4\"], [1, \"font-medium\", \"leading-5\", \"truncate\"], [1, \"leading-5\", \"truncate\", \"text-secondary\"], [1, \"z-10\", \"sticky\", \"top-0\", \"-mt-px\", \"px-6\", \"py-1\", \"md:px-8\", \"border-t\", \"border-b\", \"font-medium\", \"uppercase\", \"text-secondary\", \"bg-gray-50\", \"dark:bg-gray-900\"], [\"alt\", \"Contact avatar\", 1, \"object-cover\", \"w-full\", \"h-full\", 3, \"src\"], [1, \"flex\", \"items-center\", \"justify-center\", \"w-full\", \"h-full\", \"rounded-full\", \"text-lg\", \"uppercase\", \"bg-gray-200\", \"text-gray-600\", \"dark:bg-gray-700\", \"dark:text-gray-200\"], [1, \"p-8\", \"sm:p-16\", \"border-t\", \"text-4xl\", \"font-semibold\", \"tracking-tight\", \"text-center\"]],\n  template: function ContactsListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"mat-drawer-container\", 1);\n      i0.ɵɵlistener(\"backdropClick\", function ContactsListComponent_Template_mat_drawer_container_backdropClick_1_listener() {\n        return ctx.onBackdropClicked();\n      });\n      i0.ɵɵelementStart(2, \"mat-drawer\", 2, 3);\n      i0.ɵɵelement(4, \"router-outlet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-drawer-content\", 4);\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵelementStart(7, \"div\", 6);\n      i0.ɵɵelementStart(8, \"div\");\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵtext(10, \"Contacts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 8);\n      i0.ɵɵtemplate(12, ContactsListComponent_ng_container_12_Template, 2, 1, \"ng-container\", 9);\n      i0.ɵɵtext(13);\n      i0.ɵɵpipe(14, \"i18nPlural\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 10);\n      i0.ɵɵelementStart(16, \"div\", 5);\n      i0.ɵɵelementStart(17, \"mat-form-field\", 11);\n      i0.ɵɵelement(18, \"mat-icon\", 12);\n      i0.ɵɵelement(19, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function ContactsListComponent_Template_button_click_20_listener() {\n        return ctx.createContact();\n      });\n      i0.ɵɵelement(21, \"mat-icon\", 15);\n      i0.ɵɵelementStart(22, \"span\", 16);\n      i0.ɵɵtext(23, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 17);\n      i0.ɵɵtemplate(25, ContactsListComponent_ng_container_25_Template, 2, 2, \"ng-container\", 9);\n      i0.ɵɵpipe(26, \"async\");\n      i0.ɵɵtemplate(27, ContactsListComponent_ng_template_27_Template, 2, 0, \"ng-template\", null, 18, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"mode\", ctx.drawerMode)(\"opened\", false)(\"position\", \"end\")(\"disableClose\", true);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.contactsCount > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(14, 13, ctx.contactsCount, i0.ɵɵpureFunction0(18, _c3)), \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:search\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.searchInputControl)(\"autocomplete\", \"off\")(\"placeholder\", \"Search contacts\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"color\", \"primary\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:plus\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(26, 16, ctx.contacts$));\n    }\n  },\n  directives: [i4.MatDrawerContainer, i4.MatDrawer, i1.RouterOutlet, i4.MatDrawerContent, i5.NgIf, i6.MatFormField, i7.MatIcon, i6.MatPrefix, i8.MatInput, i9.DefaultValueAccessor, i9.NgControlStatus, i9.FormControlDirective, i10.MatButton, i5.NgForOf, i1.RouterLinkWithHref, i5.NgClass],\n  pipes: [i5.I18nPluralPipe, i5.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});","map":{"version":3,"sources":["D:\\workspace_angular\\asi\\src\\app\\modules\\admin\\apps\\contacts\\list\\list.component.ts","D:\\workspace_angular\\asi\\src\\app\\modules\\admin\\apps\\contacts\\list\\list.component.html"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDrawer } from '@angular/material/sidenav';\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { filter, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\r\nimport { Contact, Country } from 'app/modules/admin/apps/contacts/contacts.types';\r\nimport { ContactsService } from 'app/modules/admin/apps/contacts/contacts.service';\r\n\r\n@Component({\r\n    selector       : 'contacts-list',\r\n    templateUrl    : './list.component.html',\r\n    encapsulation  : ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ContactsListComponent implements OnInit, OnDestroy\r\n{\r\n    @ViewChild('matDrawer', {static: true}) matDrawer: MatDrawer;\r\n\r\n    contacts$: Observable<Contact[]>;\r\n\r\n    contactsCount: number = 0;\r\n    contactsTableColumns: string[] = ['name', 'email', 'phoneNumber', 'job'];\r\n    countries: Country[];\r\n    drawerMode: 'side' | 'over';\r\n    searchInputControl: FormControl = new FormControl();\r\n    selectedContact: Contact;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _contactsService: ContactsService,\r\n        @Inject(DOCUMENT) private _document: any,\r\n        private _router: Router,\r\n        private _fuseMediaWatcherService: FuseMediaWatcherService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Get the contacts\r\n        this.contacts$ = this._contactsService.contacts$;\r\n        this._contactsService.contacts$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((contacts: Contact[]) => {\r\n\r\n                // Update the counts\r\n                this.contactsCount = contacts.length;\r\n\r\n                // Mark for check\r\n                this._changeDetectorRef.markForCheck();\r\n            });\r\n\r\n        // Get the contact\r\n        this._contactsService.contact$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((contact: Contact) => {\r\n\r\n                // Update the selected contact\r\n                this.selectedContact = contact;\r\n\r\n                // Mark for check\r\n                this._changeDetectorRef.markForCheck();\r\n            });\r\n\r\n        // Get the countries\r\n        this._contactsService.countries$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((countries: Country[]) => {\r\n\r\n                // Update the countries\r\n                this.countries = countries;\r\n\r\n                // Mark for check\r\n                this._changeDetectorRef.markForCheck();\r\n            });\r\n\r\n        // Subscribe to search input field value changes\r\n        this.searchInputControl.valueChanges\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                switchMap(query =>\r\n\r\n                    // Search\r\n                    this._contactsService.searchContacts(query)\r\n                )\r\n            )\r\n            .subscribe();\r\n\r\n        // Subscribe to MatDrawer opened change\r\n        this.matDrawer.openedChange.subscribe((opened) => {\r\n            if ( !opened )\r\n            {\r\n                // Remove the selected contact when drawer closed\r\n                this.selectedContact = null;\r\n\r\n                // Mark for check\r\n                this._changeDetectorRef.markForCheck();\r\n            }\r\n        });\r\n\r\n        // Subscribe to media changes\r\n        this._fuseMediaWatcherService.onMediaChange$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(({matchingAliases}) => {\r\n\r\n                // Set the drawerMode if the given breakpoint is active\r\n                if ( matchingAliases.includes('lg') )\r\n                {\r\n                    this.drawerMode = 'side';\r\n                }\r\n                else\r\n                {\r\n                    this.drawerMode = 'over';\r\n                }\r\n\r\n                // Mark for check\r\n                this._changeDetectorRef.markForCheck();\r\n            });\r\n\r\n        // Listen for shortcuts\r\n        fromEvent(this._document, 'keydown')\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                filter<KeyboardEvent>(event =>\r\n                    (event.ctrlKey === true || event.metaKey) // Ctrl or Cmd\r\n                    && (event.key === '/') // '/'\r\n                )\r\n            )\r\n            .subscribe(() => {\r\n                this.createContact();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On backdrop clicked\r\n     */\r\n    onBackdropClicked(): void\r\n    {\r\n        // Go back to the list\r\n        this._router.navigate(['./'], {relativeTo: this._activatedRoute});\r\n\r\n        // Mark for check\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * Create contact\r\n     */\r\n    createContact(): void\r\n    {\r\n        // Create the contact\r\n        this._contactsService.createContact().subscribe((newContact) => {\r\n\r\n            // Go to the new contact\r\n            this._router.navigate(['./', newContact.id], {relativeTo: this._activatedRoute});\r\n\r\n            // Mark for check\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Track by function for ngFor loops\r\n     *\r\n     * @param index\r\n     * @param item\r\n     */\r\n    trackByFn(index: number, item: any): any\r\n    {\r\n        return item.id || index;\r\n    }\r\n}\r\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden\">\r\n\r\n    <mat-drawer-container\r\n        class=\"flex-auto h-full bg-card dark:bg-transparent\"\r\n        (backdropClick)=\"onBackdropClicked()\">\r\n\r\n        <!-- Drawer -->\r\n        <mat-drawer\r\n            class=\"w-full md:w-160 dark:bg-gray-900\"\r\n            [mode]=\"drawerMode\"\r\n            [opened]=\"false\"\r\n            [position]=\"'end'\"\r\n            [disableClose]=\"true\"\r\n            #matDrawer>\r\n            <router-outlet></router-outlet>\r\n        </mat-drawer>\r\n\r\n        <mat-drawer-content class=\"flex flex-col\">\r\n\r\n            <!-- Main -->\r\n            <div class=\"flex-auto\">\r\n\r\n                <!-- Header -->\r\n                <div class=\"flex flex-col sm:flex-row md:flex-col flex-auto justify-between py-8 px-6 md:px-8 border-b\">\r\n\r\n                    <!-- Title -->\r\n                    <div>\r\n                        <div class=\"text-4xl font-extrabold tracking-tight leading-none\">Contacts</div>\r\n                        <div class=\"ml-0.5 font-medium text-secondary\">\r\n                            <ng-container *ngIf=\"contactsCount > 0\">\r\n                                {{contactsCount}}\r\n                            </ng-container>\r\n                            {{contactsCount | i18nPlural: {\r\n                            '=0'   : 'No contacts',\r\n                            '=1'   : 'contact',\r\n                            'other': 'contacts'\r\n                        } }}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Main actions -->\r\n                    <div class=\"flex items-center mt-4 sm:mt-0 md:mt-4\">\r\n                        <!-- Search -->\r\n                        <div class=\"flex-auto\">\r\n                            <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded w-full min-w-50\">\r\n                                <mat-icon\r\n                                    class=\"icon-size-5\"\r\n                                    matPrefix\r\n                                    [svgIcon]=\"'heroicons_solid:search'\"></mat-icon>\r\n                                <input\r\n                                    matInput\r\n                                    [formControl]=\"searchInputControl\"\r\n                                    [autocomplete]=\"'off'\"\r\n                                    [placeholder]=\"'Search contacts'\">\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <!-- Add contact button -->\r\n                        <button\r\n                            class=\"ml-4\"\r\n                            mat-flat-button\r\n                            [color]=\"'primary'\"\r\n                            (click)=\"createContact()\">\r\n                            <mat-icon [svgIcon]=\"'heroicons_outline:plus'\"></mat-icon>\r\n                            <span class=\"ml-2 mr-1\">Add</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Contacts list -->\r\n                <div class=\"relative\">\r\n                    <ng-container *ngIf=\"contacts$ | async as contacts\">\r\n                        <ng-container *ngIf=\"contacts.length; else noContacts\">\r\n                            <ng-container *ngFor=\"let contact of contacts; let i = index; trackBy: trackByFn\">\r\n                                <!-- Group -->\r\n                                <ng-container *ngIf=\"i === 0 || contact.name.charAt(0) !== contacts[i - 1].name.charAt(0)\">\r\n                                    <div class=\"z-10 sticky top-0 -mt-px px-6 py-1 md:px-8 border-t border-b font-medium uppercase text-secondary bg-gray-50 dark:bg-gray-900\">\r\n                                        {{contact.name.charAt(0)}}\r\n                                    </div>\r\n                                </ng-container>\r\n                                <!-- Contact -->\r\n                                <a\r\n                                    class=\"z-20 flex items-center px-6 py-4 md:px-8 cursor-pointer border-b\"\r\n                                    [ngClass]=\"{'hover:bg-gray-100 dark:hover:bg-hover': !selectedContact || selectedContact.id !== contact.id,\r\n                                                'bg-primary-50 dark:bg-hover': selectedContact && selectedContact.id === contact.id}\"\r\n                                    [routerLink]=\"['./', contact.id]\">\r\n                                    <div class=\"flex flex-0 items-center justify-center w-10 h-10 rounded-full overflow-hidden\">\r\n                                        <ng-container *ngIf=\"contact.avatar\">\r\n                                            <img\r\n                                                class=\"object-cover w-full h-full\"\r\n                                                [src]=\"contact.avatar\"\r\n                                                alt=\"Contact avatar\"/>\r\n                                        </ng-container>\r\n                                        <ng-container *ngIf=\"!contact.avatar\">\r\n                                            <div class=\"flex items-center justify-center w-full h-full rounded-full text-lg uppercase bg-gray-200 text-gray-600 dark:bg-gray-700 dark:text-gray-200\">\r\n                                                {{contact.name.charAt(0)}}\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div class=\"min-w-0 ml-4\">\r\n                                        <div class=\"font-medium leading-5 truncate\">{{contact.name}}</div>\r\n                                        <div class=\"leading-5 truncate text-secondary\">{{contact.title}}</div>\r\n                                    </div>\r\n                                </a>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n\r\n                    <!-- No contacts -->\r\n                    <ng-template #noContacts>\r\n                        <div class=\"p-8 sm:p-16 border-t text-4xl font-semibold tracking-tight text-center\">There are no contacts!</div>\r\n                    </ng-template>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </mat-drawer-content>\r\n\r\n    </mat-drawer-container>\r\n\r\n</div>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}