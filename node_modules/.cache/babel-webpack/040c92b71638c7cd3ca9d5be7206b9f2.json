{"ast":null,"code":"import _asyncToGenerator from \"D:/workspace_angular/asi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nlet SolicitudesComponent = class SolicitudesComponent {\n  /**\r\n   * Constructor\r\n   */\n  constructor(_projectService, _router, _loginService) {\n    this._projectService = _projectService;\n    this._router = _router;\n    this._loginService = _loginService;\n    this.chartGithubIssues = {};\n    this.chartTaskDistribution = {};\n    this.chartBudgetDistribution = {};\n    this.chartWeeklyExpenses = {};\n    this.chartMonthlyExpenses = {};\n    this.chartYearlyExpenses = {};\n    this.selectedProject = 'ACME Corp. Backend App';\n    this._unsubscribeAll = new Subject();\n    this.user = {};\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\r\n   * On init\r\n   */\n\n\n  ngOnInit() {\n    this.consultarUsuario(); // Get the data\n\n    this._projectService.data$.pipe(takeUntil(this._unsubscribeAll)).subscribe(data => {\n      // Store the data\n      this.data = data; // Prepare the chart data\n\n      this._prepareChartData();\n    }); // Attach SVG fill fixer to all ApexCharts\n\n\n    window['Apex'] = {\n      chart: {\n        events: {\n          mounted: (chart, options) => {\n            this._fixSvgFill(chart.el);\n          },\n          updated: (chart, options) => {\n            this._fixSvgFill(chart.el);\n          }\n        }\n      }\n    };\n  }\n\n  consultarUsuario() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this._loginService.usuario(\"23623066\").subscribe(user => {\n        _this.user.name = user.usuario.nombres + ' ' + user.usuario.apellidos;\n        _this.user.email = user.usuario.descCargo;\n        console.log(user);\n      });\n    })();\n  }\n  /**\r\n   * On destroy\r\n   */\n\n\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n\n    this._unsubscribeAll.complete();\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\r\n   * Track by function for ngFor loops\r\n   *\r\n   * @param index\r\n   * @param item\r\n   */\n\n\n  trackByFn(index, item) {\n    return item.id || index;\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Private methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\r\n   * Fix the SVG fill references. This fix must be applied to all ApexCharts\r\n   * charts in order to fix 'black color on gradient fills on certain browsers'\r\n   * issue caused by the '<base>' tag.\r\n   *\r\n   * Fix based on https://gist.github.com/Kamshak/c84cdc175209d1a30f711abd6a81d472\r\n   *\r\n   * @param element\r\n   * @private\r\n   */\n\n\n  _fixSvgFill(element) {\n    // Current URL\n    const currentURL = this._router.url; // 1. Find all elements with 'fill' attribute within the element\n    // 2. Filter out the ones that doesn't have cross reference so we only left with the ones that use the 'url(#id)' syntax\n    // 3. Insert the 'currentURL' at the front of the 'fill' attribute value\n\n    Array.from(element.querySelectorAll('*[fill]')).filter(el => el.getAttribute('fill').indexOf('url(') !== -1).forEach(el => {\n      const attrVal = el.getAttribute('fill');\n      el.setAttribute('fill', `url(${currentURL}${attrVal.slice(attrVal.indexOf('#'))}`);\n    });\n  }\n  /**\r\n   * Prepare the chart data from the data\r\n   *\r\n   * @private\r\n   */\n\n\n  _prepareChartData() {\n    // Github issues\n    this.chartGithubIssues = {\n      chart: {\n        fontFamily: 'inherit',\n        foreColor: 'inherit',\n        height: '100%',\n        type: 'line',\n        toolbar: {\n          show: false\n        },\n        zoom: {\n          enabled: false\n        }\n      },\n      colors: ['#64748B', '#94A3B8'],\n      dataLabels: {\n        enabled: true,\n        enabledOnSeries: [0],\n        background: {\n          borderWidth: 0\n        }\n      },\n      grid: {\n        borderColor: 'var(--fuse-border)'\n      },\n      labels: this.data.githubIssues.labels,\n      legend: {\n        show: false\n      },\n      plotOptions: {\n        bar: {\n          columnWidth: '50%'\n        }\n      },\n      series: this.data.githubIssues.series,\n      states: {\n        hover: {\n          filter: {\n            type: 'darken',\n            value: 0.75\n          }\n        }\n      },\n      stroke: {\n        width: [3, 0]\n      },\n      tooltip: {\n        followCursor: true,\n        theme: 'dark'\n      },\n      xaxis: {\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          color: 'var(--fuse-border)'\n        },\n        labels: {\n          style: {\n            colors: 'var(--fuse-text-secondary)'\n          }\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      yaxis: {\n        labels: {\n          offsetX: -16,\n          style: {\n            colors: 'var(--fuse-text-secondary)'\n          }\n        }\n      }\n    }; // Task distribution\n\n    this.chartTaskDistribution = {\n      chart: {\n        fontFamily: 'inherit',\n        foreColor: 'inherit',\n        height: '100%',\n        type: 'polarArea',\n        toolbar: {\n          show: false\n        },\n        zoom: {\n          enabled: false\n        }\n      },\n      labels: this.data.taskDistribution.labels,\n      legend: {\n        position: 'bottom'\n      },\n      plotOptions: {\n        polarArea: {\n          spokes: {\n            connectorColors: 'var(--fuse-border)'\n          },\n          rings: {\n            strokeColor: 'var(--fuse-border)'\n          }\n        }\n      },\n      series: this.data.taskDistribution.series,\n      states: {\n        hover: {\n          filter: {\n            type: 'darken',\n            value: 0.75\n          }\n        }\n      },\n      stroke: {\n        width: 2\n      },\n      theme: {\n        monochrome: {\n          enabled: true,\n          color: '#93C5FD',\n          shadeIntensity: 0.75,\n          shadeTo: 'dark'\n        }\n      },\n      tooltip: {\n        followCursor: true,\n        theme: 'dark'\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: 'var(--fuse-text-secondary)'\n          }\n        }\n      }\n    }; // Budget distribution\n\n    this.chartBudgetDistribution = {\n      chart: {\n        fontFamily: 'inherit',\n        foreColor: 'inherit',\n        height: '100%',\n        type: 'radar',\n        sparkline: {\n          enabled: true\n        }\n      },\n      colors: ['#818CF8'],\n      dataLabels: {\n        enabled: true,\n        formatter: val => `${val}%`,\n        textAnchor: 'start',\n        style: {\n          fontSize: '13px',\n          fontWeight: 500\n        },\n        background: {\n          borderWidth: 0,\n          padding: 4\n        },\n        offsetY: -15\n      },\n      markers: {\n        strokeColors: '#818CF8',\n        strokeWidth: 4\n      },\n      plotOptions: {\n        radar: {\n          polygons: {\n            strokeColors: 'var(--fuse-border)',\n            connectorColors: 'var(--fuse-border)'\n          }\n        }\n      },\n      series: this.data.budgetDistribution.series,\n      stroke: {\n        width: 2\n      },\n      tooltip: {\n        theme: 'dark',\n        y: {\n          formatter: val => `${val}%`\n        }\n      },\n      xaxis: {\n        labels: {\n          show: true,\n          style: {\n            fontSize: '12px',\n            fontWeight: '500'\n          }\n        },\n        categories: this.data.budgetDistribution.categories\n      },\n      yaxis: {\n        max: max => parseInt((max + 10).toFixed(0), 10),\n        tickAmount: 7\n      }\n    }; // Weekly expenses\n\n    this.chartWeeklyExpenses = {\n      chart: {\n        animations: {\n          enabled: false\n        },\n        fontFamily: 'inherit',\n        foreColor: 'inherit',\n        height: '100%',\n        type: 'line',\n        sparkline: {\n          enabled: true\n        }\n      },\n      colors: ['#22D3EE'],\n      series: this.data.weeklyExpenses.series,\n      stroke: {\n        curve: 'smooth'\n      },\n      tooltip: {\n        theme: 'dark'\n      },\n      xaxis: {\n        type: 'category',\n        categories: this.data.weeklyExpenses.labels\n      },\n      yaxis: {\n        labels: {\n          formatter: val => `$${val}`\n        }\n      }\n    }; // Monthly expenses\n\n    this.chartMonthlyExpenses = {\n      chart: {\n        animations: {\n          enabled: false\n        },\n        fontFamily: 'inherit',\n        foreColor: 'inherit',\n        height: '100%',\n        type: 'line',\n        sparkline: {\n          enabled: true\n        }\n      },\n      colors: ['#4ADE80'],\n      series: this.data.monthlyExpenses.series,\n      stroke: {\n        curve: 'smooth'\n      },\n      tooltip: {\n        theme: 'dark'\n      },\n      xaxis: {\n        type: 'category',\n        categories: this.data.monthlyExpenses.labels\n      },\n      yaxis: {\n        labels: {\n          formatter: val => `$${val}`\n        }\n      }\n    }; // Yearly expenses\n\n    this.chartYearlyExpenses = {\n      chart: {\n        animations: {\n          enabled: false\n        },\n        fontFamily: 'inherit',\n        foreColor: 'inherit',\n        height: '100%',\n        type: 'line',\n        sparkline: {\n          enabled: true\n        }\n      },\n      colors: ['#FB7185'],\n      series: this.data.yearlyExpenses.series,\n      stroke: {\n        curve: 'smooth'\n      },\n      tooltip: {\n        theme: 'dark'\n      },\n      xaxis: {\n        type: 'category',\n        categories: this.data.yearlyExpenses.labels\n      },\n      yaxis: {\n        labels: {\n          formatter: val => `$${val}`\n        }\n      }\n    };\n  }\n\n};\nSolicitudesComponent = __decorate([Component({\n  selector: 'project',\n  templateUrl: './project.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})], SolicitudesComponent);\nexport { SolicitudesComponent };","map":{"version":3,"sources":["D:\\workspace_angular\\asi\\src\\app\\modules\\admin\\dashboards\\solicitudes\\solicitudes.component.ts"],"names":[],"mappings":";;AAAA,SAAS,uBAAT,EAAkC,SAAlC,EAAgE,iBAAhE,QAAyF,eAAzF;AAEA,SAAS,OAAT,QAAwB,MAAxB;AACA,SAAS,SAAT,QAA0B,gBAA1B;AAYA,IAAa,oBAAoB,GAAjC,MAAa,oBAAb,CAAiC;AAa7B;;AAEG;AACH,EAAA,WAAA,CACY,eADZ,EAEY,OAFZ,EAGY,aAHZ,EAGwC;AAF5B,SAAA,eAAA,GAAA,eAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,aAAA,GAAA,aAAA;AAjBZ,SAAA,iBAAA,GAAiC,EAAjC;AACA,SAAA,qBAAA,GAAqC,EAArC;AACA,SAAA,uBAAA,GAAuC,EAAvC;AACA,SAAA,mBAAA,GAAmC,EAAnC;AACA,SAAA,oBAAA,GAAoC,EAApC;AACA,SAAA,mBAAA,GAAmC,EAAnC;AAEA,SAAA,eAAA,GAA0B,wBAA1B;AACQ,SAAA,eAAA,GAAgC,IAAI,OAAJ,EAAhC;AACR,SAAA,IAAA,GAAO,EAAP;AAWC,GAtB4B,CAwB7B;AACA;AACA;;AAEA;;AAEG;;;AACH,EAAA,QAAQ,GAAA;AAGJ,SAAK,gBAAL,GAHI,CAIJ;;AACA,SAAK,eAAL,CAAqB,KAArB,CACK,IADL,CACU,SAAS,CAAC,KAAK,eAAN,CADnB,EAEK,SAFL,CAEgB,IAAD,IAAS;AAEhB;AACA,WAAK,IAAL,GAAY,IAAZ,CAHgB,CAKhB;;AACA,WAAK,iBAAL;AACH,KATL,EALI,CAgBJ;;;AACA,IAAA,MAAM,CAAC,MAAD,CAAN,GAAiB;AACb,MAAA,KAAK,EAAE;AACH,QAAA,MAAM,EAAE;AACJ,UAAA,OAAO,EAAE,CAAC,KAAD,EAAa,OAAb,KAAoC;AACzC,iBAAK,WAAL,CAAiB,KAAK,CAAC,EAAvB;AACH,WAHG;AAIJ,UAAA,OAAO,EAAE,CAAC,KAAD,EAAa,OAAb,KAAoC;AACzC,iBAAK,WAAL,CAAiB,KAAK,CAAC,EAAvB;AACH;AANG;AADL;AADM,KAAjB;AAYH;;AAEI,EAAA,gBAAgB,GAAA;AAAA;;AAAA;AAClB,YAAM,KAAI,CAAC,aAAL,CAAmB,OAAnB,CAA2B,UAA3B,EAAuC,SAAvC,CACA,IAAD,IAAQ;AACH,QAAA,KAAI,CAAC,IAAL,CAAU,IAAV,GAAiB,IAAI,CAAC,OAAL,CAAa,OAAb,GAAuB,GAAvB,GAA6B,IAAI,CAAC,OAAL,CAAa,SAA3D;AACA,QAAA,KAAI,CAAC,IAAL,CAAU,KAAV,GAAkB,IAAI,CAAC,OAAL,CAAa,SAA/B;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACJ,OALA,CAAN;AADkB;AAQpB;AAED;;AAEG;;;AACH,EAAA,WAAW,GAAA;AAEP;AACA,SAAK,eAAL,CAAqB,IAArB;;AACA,SAAK,eAAL,CAAqB,QAArB;AACH,GAhF4B,CAkF7B;AACA;AACA;;AAEA;;;;;AAKG;;;AACH,EAAA,SAAS,CAAC,KAAD,EAAgB,IAAhB,EAAyB;AAE9B,WAAO,IAAI,CAAC,EAAL,IAAW,KAAlB;AACH,GA/F4B,CAiG7B;AACA;AACA;;AAEA;;;;;;;;;AASG;;;AACK,EAAA,WAAW,CAAC,OAAD,EAAiB;AAEhC;AACA,UAAM,UAAU,GAAG,KAAK,OAAL,CAAa,GAAhC,CAHgC,CAKhC;AACA;AACA;;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,OAAO,CAAC,gBAAR,CAAyB,SAAzB,CAAX,EACM,MADN,CACa,EAAE,IAAI,EAAE,CAAC,YAAH,CAAgB,MAAhB,EAAwB,OAAxB,CAAgC,MAAhC,MAA4C,CAAC,CADhE,EAEM,OAFN,CAEe,EAAD,IAAO;AACZ,YAAM,OAAO,GAAG,EAAE,CAAC,YAAH,CAAgB,MAAhB,CAAhB;AACA,MAAA,EAAE,CAAC,YAAH,CAAgB,MAAhB,EAAwB,OAAO,UAAU,GAAG,OAAO,CAAC,KAAR,CAAc,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAd,CAAmC,EAA/E;AACH,KALN;AAMH;AAED;;;;AAIG;;;AACK,EAAA,iBAAiB,GAAA;AAErB;AACA,SAAK,iBAAL,GAAyB;AACrB,MAAA,KAAK,EAAQ;AACT,QAAA,UAAU,EAAE,SADH;AAET,QAAA,SAAS,EAAG,SAFH;AAGT,QAAA,MAAM,EAAM,MAHH;AAIT,QAAA,IAAI,EAAQ,MAJH;AAKT,QAAA,OAAO,EAAK;AACR,UAAA,IAAI,EAAE;AADE,SALH;AAQT,QAAA,IAAI,EAAQ;AACR,UAAA,OAAO,EAAE;AADD;AARH,OADQ;AAarB,MAAA,MAAM,EAAO,CAAC,SAAD,EAAY,SAAZ,CAbQ;AAcrB,MAAA,UAAU,EAAG;AACT,QAAA,OAAO,EAAU,IADR;AAET,QAAA,eAAe,EAAE,CAAC,CAAD,CAFR;AAGT,QAAA,UAAU,EAAO;AACb,UAAA,WAAW,EAAE;AADA;AAHR,OAdQ;AAqBrB,MAAA,IAAI,EAAS;AACT,QAAA,WAAW,EAAE;AADJ,OArBQ;AAwBrB,MAAA,MAAM,EAAO,KAAK,IAAL,CAAU,YAAV,CAAuB,MAxBf;AAyBrB,MAAA,MAAM,EAAO;AACT,QAAA,IAAI,EAAE;AADG,OAzBQ;AA4BrB,MAAA,WAAW,EAAE;AACT,QAAA,GAAG,EAAE;AACD,UAAA,WAAW,EAAE;AADZ;AADI,OA5BQ;AAiCrB,MAAA,MAAM,EAAO,KAAK,IAAL,CAAU,YAAV,CAAuB,MAjCf;AAkCrB,MAAA,MAAM,EAAO;AACT,QAAA,KAAK,EAAE;AACH,UAAA,MAAM,EAAE;AACJ,YAAA,IAAI,EAAG,QADH;AAEJ,YAAA,KAAK,EAAE;AAFH;AADL;AADE,OAlCQ;AA0CrB,MAAA,MAAM,EAAO;AACT,QAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AADE,OA1CQ;AA6CrB,MAAA,OAAO,EAAM;AACT,QAAA,YAAY,EAAE,IADL;AAET,QAAA,KAAK,EAAS;AAFL,OA7CQ;AAiDrB,MAAA,KAAK,EAAQ;AACT,QAAA,UAAU,EAAE;AACR,UAAA,IAAI,EAAE;AADE,SADH;AAIT,QAAA,SAAS,EAAG;AACR,UAAA,KAAK,EAAE;AADC,SAJH;AAOT,QAAA,MAAM,EAAM;AACR,UAAA,KAAK,EAAE;AACH,YAAA,MAAM,EAAE;AADL;AADC,SAPH;AAYT,QAAA,OAAO,EAAK;AACR,UAAA,OAAO,EAAE;AADD;AAZH,OAjDQ;AAiErB,MAAA,KAAK,EAAQ;AACT,QAAA,MAAM,EAAE;AACJ,UAAA,OAAO,EAAE,CAAC,EADN;AAEJ,UAAA,KAAK,EAAI;AACL,YAAA,MAAM,EAAE;AADH;AAFL;AADC;AAjEQ,KAAzB,CAHqB,CA8ErB;;AACA,SAAK,qBAAL,GAA6B;AACzB,MAAA,KAAK,EAAQ;AACT,QAAA,UAAU,EAAE,SADH;AAET,QAAA,SAAS,EAAG,SAFH;AAGT,QAAA,MAAM,EAAM,MAHH;AAIT,QAAA,IAAI,EAAQ,WAJH;AAKT,QAAA,OAAO,EAAK;AACR,UAAA,IAAI,EAAE;AADE,SALH;AAQT,QAAA,IAAI,EAAQ;AACR,UAAA,OAAO,EAAE;AADD;AARH,OADY;AAazB,MAAA,MAAM,EAAO,KAAK,IAAL,CAAU,gBAAV,CAA2B,MAbf;AAczB,MAAA,MAAM,EAAO;AACT,QAAA,QAAQ,EAAE;AADD,OAdY;AAiBzB,MAAA,WAAW,EAAE;AACT,QAAA,SAAS,EAAE;AACP,UAAA,MAAM,EAAE;AACJ,YAAA,eAAe,EAAE;AADb,WADD;AAIP,UAAA,KAAK,EAAG;AACJ,YAAA,WAAW,EAAE;AADT;AAJD;AADF,OAjBY;AA2BzB,MAAA,MAAM,EAAO,KAAK,IAAL,CAAU,gBAAV,CAA2B,MA3Bf;AA4BzB,MAAA,MAAM,EAAO;AACT,QAAA,KAAK,EAAE;AACH,UAAA,MAAM,EAAE;AACJ,YAAA,IAAI,EAAG,QADH;AAEJ,YAAA,KAAK,EAAE;AAFH;AADL;AADE,OA5BY;AAoCzB,MAAA,MAAM,EAAO;AACT,QAAA,KAAK,EAAE;AADE,OApCY;AAuCzB,MAAA,KAAK,EAAQ;AACT,QAAA,UAAU,EAAE;AACR,UAAA,OAAO,EAAS,IADR;AAER,UAAA,KAAK,EAAW,SAFR;AAGR,UAAA,cAAc,EAAE,IAHR;AAIR,UAAA,OAAO,EAAS;AAJR;AADH,OAvCY;AA+CzB,MAAA,OAAO,EAAM;AACT,QAAA,YAAY,EAAE,IADL;AAET,QAAA,KAAK,EAAS;AAFL,OA/CY;AAmDzB,MAAA,KAAK,EAAQ;AACT,QAAA,MAAM,EAAE;AACJ,UAAA,KAAK,EAAE;AACH,YAAA,MAAM,EAAE;AADL;AADH;AADC;AAnDY,KAA7B,CA/EqB,CA2IrB;;AACA,SAAK,uBAAL,GAA+B;AAC3B,MAAA,KAAK,EAAQ;AACT,QAAA,UAAU,EAAE,SADH;AAET,QAAA,SAAS,EAAG,SAFH;AAGT,QAAA,MAAM,EAAM,MAHH;AAIT,QAAA,IAAI,EAAQ,OAJH;AAKT,QAAA,SAAS,EAAG;AACR,UAAA,OAAO,EAAE;AADD;AALH,OADc;AAU3B,MAAA,MAAM,EAAO,CAAC,SAAD,CAVc;AAW3B,MAAA,UAAU,EAAG;AACT,QAAA,OAAO,EAAK,IADH;AAET,QAAA,SAAS,EAAI,GAAD,IAAkC,GAAG,GAAG,GAF3C;AAGT,QAAA,UAAU,EAAE,OAHH;AAIT,QAAA,KAAK,EAAO;AACR,UAAA,QAAQ,EAAI,MADJ;AAER,UAAA,UAAU,EAAE;AAFJ,SAJH;AAQT,QAAA,UAAU,EAAE;AACR,UAAA,WAAW,EAAE,CADL;AAER,UAAA,OAAO,EAAM;AAFL,SARH;AAYT,QAAA,OAAO,EAAK,CAAC;AAZJ,OAXc;AAyB3B,MAAA,OAAO,EAAM;AACT,QAAA,YAAY,EAAE,SADL;AAET,QAAA,WAAW,EAAG;AAFL,OAzBc;AA6B3B,MAAA,WAAW,EAAE;AACT,QAAA,KAAK,EAAE;AACH,UAAA,QAAQ,EAAE;AACN,YAAA,YAAY,EAAK,oBADX;AAEN,YAAA,eAAe,EAAE;AAFX;AADP;AADE,OA7Bc;AAqC3B,MAAA,MAAM,EAAO,KAAK,IAAL,CAAU,kBAAV,CAA6B,MArCf;AAsC3B,MAAA,MAAM,EAAO;AACT,QAAA,KAAK,EAAE;AADE,OAtCc;AAyC3B,MAAA,OAAO,EAAM;AACT,QAAA,KAAK,EAAE,MADE;AAET,QAAA,CAAC,EAAM;AACH,UAAA,SAAS,EAAG,GAAD,IAAyB,GAAG,GAAG;AADvC;AAFE,OAzCc;AA+C3B,MAAA,KAAK,EAAQ;AACT,QAAA,MAAM,EAAM;AACR,UAAA,IAAI,EAAG,IADC;AAER,UAAA,KAAK,EAAE;AACH,YAAA,QAAQ,EAAI,MADT;AAEH,YAAA,UAAU,EAAE;AAFT;AAFC,SADH;AAQT,QAAA,UAAU,EAAE,KAAK,IAAL,CAAU,kBAAV,CAA6B;AARhC,OA/Cc;AAyD3B,MAAA,KAAK,EAAQ;AACT,QAAA,GAAG,EAAU,GAAD,IAAyB,QAAQ,CAAC,CAAC,GAAG,GAAG,EAAP,EAAW,OAAX,CAAmB,CAAnB,CAAD,EAAwB,EAAxB,CADpC;AAET,QAAA,UAAU,EAAE;AAFH;AAzDc,KAA/B,CA5IqB,CA2MrB;;AACA,SAAK,mBAAL,GAA2B;AACvB,MAAA,KAAK,EAAI;AACL,QAAA,UAAU,EAAE;AACR,UAAA,OAAO,EAAE;AADD,SADP;AAIL,QAAA,UAAU,EAAE,SAJP;AAKL,QAAA,SAAS,EAAG,SALP;AAML,QAAA,MAAM,EAAM,MANP;AAOL,QAAA,IAAI,EAAQ,MAPP;AAQL,QAAA,SAAS,EAAG;AACR,UAAA,OAAO,EAAE;AADD;AARP,OADc;AAavB,MAAA,MAAM,EAAG,CAAC,SAAD,CAbc;AAcvB,MAAA,MAAM,EAAG,KAAK,IAAL,CAAU,cAAV,CAAyB,MAdX;AAevB,MAAA,MAAM,EAAG;AACL,QAAA,KAAK,EAAE;AADF,OAfc;AAkBvB,MAAA,OAAO,EAAE;AACL,QAAA,KAAK,EAAE;AADF,OAlBc;AAqBvB,MAAA,KAAK,EAAI;AACL,QAAA,IAAI,EAAQ,UADP;AAEL,QAAA,UAAU,EAAE,KAAK,IAAL,CAAU,cAAV,CAAyB;AAFhC,OArBc;AAyBvB,MAAA,KAAK,EAAI;AACL,QAAA,MAAM,EAAE;AACJ,UAAA,SAAS,EAAG,GAAD,IAAiB,IAAI,GAAG;AAD/B;AADH;AAzBc,KAA3B,CA5MqB,CA4OrB;;AACA,SAAK,oBAAL,GAA4B;AACxB,MAAA,KAAK,EAAI;AACL,QAAA,UAAU,EAAE;AACR,UAAA,OAAO,EAAE;AADD,SADP;AAIL,QAAA,UAAU,EAAE,SAJP;AAKL,QAAA,SAAS,EAAG,SALP;AAML,QAAA,MAAM,EAAM,MANP;AAOL,QAAA,IAAI,EAAQ,MAPP;AAQL,QAAA,SAAS,EAAG;AACR,UAAA,OAAO,EAAE;AADD;AARP,OADe;AAaxB,MAAA,MAAM,EAAG,CAAC,SAAD,CAbe;AAcxB,MAAA,MAAM,EAAG,KAAK,IAAL,CAAU,eAAV,CAA0B,MAdX;AAexB,MAAA,MAAM,EAAG;AACL,QAAA,KAAK,EAAE;AADF,OAfe;AAkBxB,MAAA,OAAO,EAAE;AACL,QAAA,KAAK,EAAE;AADF,OAlBe;AAqBxB,MAAA,KAAK,EAAI;AACL,QAAA,IAAI,EAAQ,UADP;AAEL,QAAA,UAAU,EAAE,KAAK,IAAL,CAAU,eAAV,CAA0B;AAFjC,OArBe;AAyBxB,MAAA,KAAK,EAAI;AACL,QAAA,MAAM,EAAE;AACJ,UAAA,SAAS,EAAG,GAAD,IAAiB,IAAI,GAAG;AAD/B;AADH;AAzBe,KAA5B,CA7OqB,CA6QrB;;AACA,SAAK,mBAAL,GAA2B;AACvB,MAAA,KAAK,EAAI;AACL,QAAA,UAAU,EAAE;AACR,UAAA,OAAO,EAAE;AADD,SADP;AAIL,QAAA,UAAU,EAAE,SAJP;AAKL,QAAA,SAAS,EAAG,SALP;AAML,QAAA,MAAM,EAAM,MANP;AAOL,QAAA,IAAI,EAAQ,MAPP;AAQL,QAAA,SAAS,EAAG;AACR,UAAA,OAAO,EAAE;AADD;AARP,OADc;AAavB,MAAA,MAAM,EAAG,CAAC,SAAD,CAbc;AAcvB,MAAA,MAAM,EAAG,KAAK,IAAL,CAAU,cAAV,CAAyB,MAdX;AAevB,MAAA,MAAM,EAAG;AACL,QAAA,KAAK,EAAE;AADF,OAfc;AAkBvB,MAAA,OAAO,EAAE;AACL,QAAA,KAAK,EAAE;AADF,OAlBc;AAqBvB,MAAA,KAAK,EAAI;AACL,QAAA,IAAI,EAAQ,UADP;AAEL,QAAA,UAAU,EAAE,KAAK,IAAL,CAAU,cAAV,CAAyB;AAFhC,OArBc;AAyBvB,MAAA,KAAK,EAAI;AACL,QAAA,MAAM,EAAE;AACJ,UAAA,SAAS,EAAG,GAAD,IAAiB,IAAI,GAAG;AAD/B;AADH;AAzBc,KAA3B;AA+BH;;AAjb4B,CAAjC;AAAa,oBAAoB,GAAA,UAAA,CAAA,CANhC,SAAS,CAAC;AACP,EAAA,QAAQ,EAAS,SADV;AAEP,EAAA,WAAW,EAAM,0BAFV;AAGP,EAAA,aAAa,EAAI,iBAAiB,CAAC,IAH5B;AAIP,EAAA,eAAe,EAAE,uBAAuB,CAAC;AAJlC,CAAD,CAMuB,CAAA,EAApB,oBAAoB,CAApB;SAAA,oB","sourcesContent":["import { ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { ApexOptions } from 'ng-apexcharts';\r\nimport { LoginService } from 'app/services/login.service';\r\nimport { User } from 'app/core/user/user.types';\r\nimport { SolicitudesService } from './solicitudes.service';\r\n\r\n@Component({\r\n    selector       : 'project',\r\n    templateUrl    : './project.component.html',\r\n    encapsulation  : ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SolicitudesComponent implements OnInit, OnDestroy\r\n{\r\n    chartGithubIssues: ApexOptions = {};\r\n    chartTaskDistribution: ApexOptions = {};\r\n    chartBudgetDistribution: ApexOptions = {};\r\n    chartWeeklyExpenses: ApexOptions = {};\r\n    chartMonthlyExpenses: ApexOptions = {};\r\n    chartYearlyExpenses: ApexOptions = {};\r\n    data: any;\r\n    selectedProject: string = 'ACME Corp. Backend App';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    user = {} as User;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _projectService: SolicitudesService,\r\n        private _router: Router,\r\n        private _loginService : LoginService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n\r\n        this.consultarUsuario();\r\n        // Get the data\r\n        this._projectService.data$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((data) => {\r\n\r\n                // Store the data\r\n                this.data = data;\r\n\r\n                // Prepare the chart data\r\n                this._prepareChartData();\r\n            });\r\n\r\n        // Attach SVG fill fixer to all ApexCharts\r\n        window['Apex'] = {\r\n            chart: {\r\n                events: {\r\n                    mounted: (chart: any, options?: any): void => {\r\n                        this._fixSvgFill(chart.el);\r\n                    },\r\n                    updated: (chart: any, options?: any): void => {\r\n                        this._fixSvgFill(chart.el);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n   async consultarUsuario(){\r\n       await this._loginService.usuario(\"23623066\").subscribe(\r\n            (user)=>{\r\n                 this.user.name = user.usuario.nombres + ' ' + user.usuario.apellidos;  \r\n                 this.user.email = user.usuario.descCargo;\r\n                 console.log(user)\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Track by function for ngFor loops\r\n     *\r\n     * @param index\r\n     * @param item\r\n     */\r\n    trackByFn(index: number, item: any): any\r\n    {\r\n        return item.id || index;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Fix the SVG fill references. This fix must be applied to all ApexCharts\r\n     * charts in order to fix 'black color on gradient fills on certain browsers'\r\n     * issue caused by the '<base>' tag.\r\n     *\r\n     * Fix based on https://gist.github.com/Kamshak/c84cdc175209d1a30f711abd6a81d472\r\n     *\r\n     * @param element\r\n     * @private\r\n     */\r\n    private _fixSvgFill(element: Element): void\r\n    {\r\n        // Current URL\r\n        const currentURL = this._router.url;\r\n\r\n        // 1. Find all elements with 'fill' attribute within the element\r\n        // 2. Filter out the ones that doesn't have cross reference so we only left with the ones that use the 'url(#id)' syntax\r\n        // 3. Insert the 'currentURL' at the front of the 'fill' attribute value\r\n        Array.from(element.querySelectorAll('*[fill]'))\r\n             .filter(el => el.getAttribute('fill').indexOf('url(') !== -1)\r\n             .forEach((el) => {\r\n                 const attrVal = el.getAttribute('fill');\r\n                 el.setAttribute('fill', `url(${currentURL}${attrVal.slice(attrVal.indexOf('#'))}`);\r\n             });\r\n    }\r\n\r\n    /**\r\n     * Prepare the chart data from the data\r\n     *\r\n     * @private\r\n     */\r\n    private _prepareChartData(): void\r\n    {\r\n        // Github issues\r\n        this.chartGithubIssues = {\r\n            chart      : {\r\n                fontFamily: 'inherit',\r\n                foreColor : 'inherit',\r\n                height    : '100%',\r\n                type      : 'line',\r\n                toolbar   : {\r\n                    show: false\r\n                },\r\n                zoom      : {\r\n                    enabled: false\r\n                }\r\n            },\r\n            colors     : ['#64748B', '#94A3B8'],\r\n            dataLabels : {\r\n                enabled        : true,\r\n                enabledOnSeries: [0],\r\n                background     : {\r\n                    borderWidth: 0\r\n                }\r\n            },\r\n            grid       : {\r\n                borderColor: 'var(--fuse-border)'\r\n            },\r\n            labels     : this.data.githubIssues.labels,\r\n            legend     : {\r\n                show: false\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    columnWidth: '50%'\r\n                }\r\n            },\r\n            series     : this.data.githubIssues.series,\r\n            states     : {\r\n                hover: {\r\n                    filter: {\r\n                        type : 'darken',\r\n                        value: 0.75\r\n                    }\r\n                }\r\n            },\r\n            stroke     : {\r\n                width: [3, 0]\r\n            },\r\n            tooltip    : {\r\n                followCursor: true,\r\n                theme       : 'dark'\r\n            },\r\n            xaxis      : {\r\n                axisBorder: {\r\n                    show: false\r\n                },\r\n                axisTicks : {\r\n                    color: 'var(--fuse-border)'\r\n                },\r\n                labels    : {\r\n                    style: {\r\n                        colors: 'var(--fuse-text-secondary)'\r\n                    }\r\n                },\r\n                tooltip   : {\r\n                    enabled: false\r\n                }\r\n            },\r\n            yaxis      : {\r\n                labels: {\r\n                    offsetX: -16,\r\n                    style  : {\r\n                        colors: 'var(--fuse-text-secondary)'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        // Task distribution\r\n        this.chartTaskDistribution = {\r\n            chart      : {\r\n                fontFamily: 'inherit',\r\n                foreColor : 'inherit',\r\n                height    : '100%',\r\n                type      : 'polarArea',\r\n                toolbar   : {\r\n                    show: false\r\n                },\r\n                zoom      : {\r\n                    enabled: false\r\n                }\r\n            },\r\n            labels     : this.data.taskDistribution.labels,\r\n            legend     : {\r\n                position: 'bottom'\r\n            },\r\n            plotOptions: {\r\n                polarArea: {\r\n                    spokes: {\r\n                        connectorColors: 'var(--fuse-border)'\r\n                    },\r\n                    rings : {\r\n                        strokeColor: 'var(--fuse-border)'\r\n                    }\r\n                }\r\n            },\r\n            series     : this.data.taskDistribution.series,\r\n            states     : {\r\n                hover: {\r\n                    filter: {\r\n                        type : 'darken',\r\n                        value: 0.75\r\n                    }\r\n                }\r\n            },\r\n            stroke     : {\r\n                width: 2\r\n            },\r\n            theme      : {\r\n                monochrome: {\r\n                    enabled       : true,\r\n                    color         : '#93C5FD',\r\n                    shadeIntensity: 0.75,\r\n                    shadeTo       : 'dark'\r\n                }\r\n            },\r\n            tooltip    : {\r\n                followCursor: true,\r\n                theme       : 'dark'\r\n            },\r\n            yaxis      : {\r\n                labels: {\r\n                    style: {\r\n                        colors: 'var(--fuse-text-secondary)'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        // Budget distribution\r\n        this.chartBudgetDistribution = {\r\n            chart      : {\r\n                fontFamily: 'inherit',\r\n                foreColor : 'inherit',\r\n                height    : '100%',\r\n                type      : 'radar',\r\n                sparkline : {\r\n                    enabled: true\r\n                }\r\n            },\r\n            colors     : ['#818CF8'],\r\n            dataLabels : {\r\n                enabled   : true,\r\n                formatter : (val: number): string | number => `${val}%`,\r\n                textAnchor: 'start',\r\n                style     : {\r\n                    fontSize  : '13px',\r\n                    fontWeight: 500\r\n                },\r\n                background: {\r\n                    borderWidth: 0,\r\n                    padding    : 4\r\n                },\r\n                offsetY   : -15\r\n            },\r\n            markers    : {\r\n                strokeColors: '#818CF8',\r\n                strokeWidth : 4\r\n            },\r\n            plotOptions: {\r\n                radar: {\r\n                    polygons: {\r\n                        strokeColors   : 'var(--fuse-border)',\r\n                        connectorColors: 'var(--fuse-border)'\r\n                    }\r\n                }\r\n            },\r\n            series     : this.data.budgetDistribution.series,\r\n            stroke     : {\r\n                width: 2\r\n            },\r\n            tooltip    : {\r\n                theme: 'dark',\r\n                y    : {\r\n                    formatter: (val: number): string => `${val}%`\r\n                }\r\n            },\r\n            xaxis      : {\r\n                labels    : {\r\n                    show : true,\r\n                    style: {\r\n                        fontSize  : '12px',\r\n                        fontWeight: '500'\r\n                    }\r\n                },\r\n                categories: this.data.budgetDistribution.categories\r\n            },\r\n            yaxis      : {\r\n                max       : (max: number): number => parseInt((max + 10).toFixed(0), 10),\r\n                tickAmount: 7\r\n            }\r\n        };\r\n\r\n        // Weekly expenses\r\n        this.chartWeeklyExpenses = {\r\n            chart  : {\r\n                animations: {\r\n                    enabled: false\r\n                },\r\n                fontFamily: 'inherit',\r\n                foreColor : 'inherit',\r\n                height    : '100%',\r\n                type      : 'line',\r\n                sparkline : {\r\n                    enabled: true\r\n                }\r\n            },\r\n            colors : ['#22D3EE'],\r\n            series : this.data.weeklyExpenses.series,\r\n            stroke : {\r\n                curve: 'smooth'\r\n            },\r\n            tooltip: {\r\n                theme: 'dark'\r\n            },\r\n            xaxis  : {\r\n                type      : 'category',\r\n                categories: this.data.weeklyExpenses.labels\r\n            },\r\n            yaxis  : {\r\n                labels: {\r\n                    formatter: (val): string => `$${val}`\r\n                }\r\n            }\r\n        };\r\n\r\n        // Monthly expenses\r\n        this.chartMonthlyExpenses = {\r\n            chart  : {\r\n                animations: {\r\n                    enabled: false\r\n                },\r\n                fontFamily: 'inherit',\r\n                foreColor : 'inherit',\r\n                height    : '100%',\r\n                type      : 'line',\r\n                sparkline : {\r\n                    enabled: true\r\n                }\r\n            },\r\n            colors : ['#4ADE80'],\r\n            series : this.data.monthlyExpenses.series,\r\n            stroke : {\r\n                curve: 'smooth'\r\n            },\r\n            tooltip: {\r\n                theme: 'dark'\r\n            },\r\n            xaxis  : {\r\n                type      : 'category',\r\n                categories: this.data.monthlyExpenses.labels\r\n            },\r\n            yaxis  : {\r\n                labels: {\r\n                    formatter: (val): string => `$${val}`\r\n                }\r\n            }\r\n        };\r\n\r\n        // Yearly expenses\r\n        this.chartYearlyExpenses = {\r\n            chart  : {\r\n                animations: {\r\n                    enabled: false\r\n                },\r\n                fontFamily: 'inherit',\r\n                foreColor : 'inherit',\r\n                height    : '100%',\r\n                type      : 'line',\r\n                sparkline : {\r\n                    enabled: true\r\n                }\r\n            },\r\n            colors : ['#FB7185'],\r\n            series : this.data.yearlyExpenses.series,\r\n            stroke : {\r\n                curve: 'smooth'\r\n            },\r\n            tooltip: {\r\n                theme: 'dark'\r\n            },\r\n            xaxis  : {\r\n                type      : 'category',\r\n                categories: this.data.yearlyExpenses.labels\r\n            },\r\n            yaxis  : {\r\n                labels: {\r\n                    formatter: (val): string => `$${val}`\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}